-Xmx	应用程序(不是JVM)能够使用的最大内存数
-Xms	程序初始化的时候内存栈的大小
-Xmn	设置年轻代大小为2G
-Xss	设置每个线程的堆栈大小
-XX:ReservedCodeCacheSize=240m	缓存	


1.每个线程包含一个栈区，栈中只保存基本数据类型的数据和自定义对象的引用(不是对象)，对象都存放在堆区中
2.每个栈中的数据(原始类型和对象引用)都是私有的，其他栈不能访问。
3.栈分为3个部分：基本数据类型的变量区、执行环境上下文、操作指令区(存放操作指令)。

method（方法区）又叫静态区，存放所有的
	1、类（class），
	2、静态变量（static变量），
	3、静态方法，
	4、常量
	5、成员方法。

https://my.oschina.net/wangsifangyuan/blog/711329


JVM GC 算法：
1、引用计数器算法
	优点：实现简单、性能高。
	缺点：增减处理频繁消耗cpu计算、计数器占用很多位浪费空间、最重要的缺点是无法解决循环引用的问题。
2、可达性分析算法：通过一些列的“GC Roots”对象作为起始点，从这些对象开始往下搜索，搜索所经过的路径称之为“引用链”。
	在Java中，可作为GC Roots对象的列表：
		Java虚拟机栈中的引用对象。
		本地方法栈中JNI（既一般说的Native方法）引用的对象。
		方法区中类静态常量的引用对象。
		方法区中常量的引用对象。


引用类型：
	1.强引用：在代码中普遍存在的，类似“Object obj = new Object()”这类引用，只要强引用还在，垃圾收集器永远不会回收掉被引用的对象。
	2.软引用：是一种相对强引用弱化一些的引用，可以让对象豁免一些垃圾收集，只有当jvm认为内存不足时，才会去试图回收软引用指向的对象。jvm会确保在抛出OutOfMemoryError之前，清理软引用指向的对象。
	3.弱引用：非必需对象，但它的强度比软引用更弱，被弱引用关联的对象只能生存到下一次垃圾收集发生之前。
	4.虚引用：也称为幽灵引用或幻影引用，是最弱的一种引用关系，无法通过虚引用来获取一个对象实例，为对象设置虚引用的目的只有一个，就是当着个对象被收集器回收时收到一条系统通知。
